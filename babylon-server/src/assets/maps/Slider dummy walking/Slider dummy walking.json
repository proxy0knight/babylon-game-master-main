{
  "name": "Slider dummy walking",
  "type": "map",
  "code": "var delayCreateScene = function () {\n\n\tengine.enableOfflineSupport = false;\n\tBABYLON.Animation.AllowMatricesInterpolation = true;\n    var scene = new BABYLON.Scene(engine);\n\n    var camera = new BABYLON.ArcRotateCamera(\"camera1\", Math.PI / 2, Math.PI / 4, 3, new BABYLON.Vector3(0, 1, 0), scene);\n    camera.attachControl(canvas, true);\n\n    camera.lowerRadiusLimit = 2;\n    camera.upperRadiusLimit = 10;\n    camera.wheelDeltaPercentage = 0.01;\n\n\tvar light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), scene);\n\tlight.intensity = 0.6;\n\tlight.specular = BABYLON.Color3.Black();\n\n    var light2 = new BABYLON.DirectionalLight(\"dir01\", new BABYLON.Vector3(0, -0.5, -1.0), scene);\n    light2.position = new BABYLON.Vector3(0, 5, 5);\n\n    // Shadows\n    var shadowGenerator = new BABYLON.ShadowGenerator(1024, light2);\n    shadowGenerator.useBlurExponentialShadowMap = true;\n    shadowGenerator.blurKernel = 32;\n\t\n    engine.displayLoadingUI();\n\n\tBABYLON.SceneLoader.ImportMesh(\"\", \"./scenes/\", \"dummy2.babylon\", scene, function (newMeshes, particleSystems, skeletons) {\n        var skeleton = skeletons[0];\n\n        shadowGenerator.addShadowCaster(scene.meshes[0], true);\n        for (var index = 0; index < newMeshes.length; index++) {\n            newMeshes[index].receiveShadows = false;;\n        }\n\n        var helper = scene.createDefaultEnvironment({\n            enableGroundShadow: true\n        });\n        helper.setMainColor(BABYLON.Color3.Gray());\n        helper.ground.position.y += 0.01;\n\n        var idleAnim = scene.beginWeightedAnimation(skeleton, 0, 89, 1.0, true);\n        var walkAnim = scene.beginWeightedAnimation(skeleton, 90, 118, 0, true);\n\t\tvar runAnim = scene.beginWeightedAnimation(skeleton, 119, 135, 0, true);\n\t\t       \n        // UI\n        var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n        var UiPanel = new BABYLON.GUI.StackPanel();\n        UiPanel.width = \"220px\";\n        UiPanel.fontSize = \"14px\";\n        UiPanel.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\n        UiPanel.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER;\n        advancedTexture.addControl(UiPanel);\n        var params = [\n            {name: \"Idle\", anim: idleAnim},\n            {name: \"Walk\", anim: walkAnim},\n            {name: \"Run\", anim: runAnim}\n        ]\n        params.forEach((param)=>{\n            var header = new BABYLON.GUI.TextBlock();\n            header.text = param.name + \":\" + param.anim.weight.toFixed(2);\n            header.height = \"40px\";\n            header.color = \"green\";\n            header.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            header.paddingTop = \"10px\";\n            UiPanel.addControl(header); \n            var slider = new BABYLON.GUI.Slider();\n            slider.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\n            slider.minimum = 0;\n            slider.maximum = 1;\n            slider.color = \"green\";\n            slider.value = param.anim.weight;\n            slider.height = \"20px\";\n            slider.width = \"205px\";\n            UiPanel.addControl(slider); \n            slider.onValueChangedObservable.add((v)=>{\n                param.anim.weight = v;\n                header.text = param.name + \":\" + param.anim.weight.toFixed(2);\n            }) \n            param.anim._slider = slider;\n        });\n\n        var button = BABYLON.GUI.Button.CreateSimpleButton(\"but0\", \"From idle to walk\");\n        button.paddingTop = \"10px\";\n        button.width = \"100px\";\n        button.height = \"50px\";\n        button.color = \"white\";\n        button.background = \"green\";\n        button.onPointerDownObservable.add(function() {\n            idleAnim._slider.value = 1.0;\n            walkAnim._slider.value = 0;\n\t\t\trunAnim._slider.value = 0.0;\n\t\t\t// Synchronize animations\n\t\t\twalkAnim.syncWith(null);\n\t\t\tidleAnim.syncWith(walkAnim);\n            let obs = scene.onBeforeAnimationsObservable.add(function() {\n                idleAnim._slider.value -= 0.01;\n\n                if (idleAnim._slider.value <= 0) {\n                    scene.onBeforeAnimationsObservable.remove(obs);\n                    idleAnim._slider.value = 0;\n                    walkAnim._slider.value = 1.0;\n                } else {\n                    walkAnim._slider.value = 1.0 - idleAnim._slider.value;\n                }\n            })\n        });\n        UiPanel.addControl(button);   \t\n\n        button = BABYLON.GUI.Button.CreateSimpleButton(\"but0\", \"From walk to run\");\n        button.paddingTop = \"10px\";\n        button.width = \"100px\";\n        button.height = \"50px\";\n        button.color = \"white\";\n        button.background = \"green\";\n        button.onPointerDownObservable.add(function() {\n            walkAnim._slider.value = 1.0;\n            idleAnim._slider.value = 0;\n\t\t\trunAnim._slider.value = 0.0;\n\t\t\t// Synchronize animations\n\t\t\twalkAnim.syncWith(runAnim);\t\t\t\n            let obs = scene.onBeforeAnimationsObservable.add(function() {\n                walkAnim._slider.value -= 0.01;\n\n                if (walkAnim._slider.value <= 0) {\n                    scene.onBeforeAnimationsObservable.remove(obs);\n                    walkAnim._slider.value = 0;\n                    runAnim._slider.value = 1.0;\n                } else {\n                    runAnim._slider.value = 1.0 - walkAnim._slider.value;\n                }\n            })\n        });\n        UiPanel.addControl(button); \n\n        engine.hideLoadingUI();\n    }, function(evt){\n    });\t\n\t\n    return scene;\n\n};\n",
  "created_at": "2025-07-29T13:51:36.689501",
  "updated_at": "2025-07-29T13:51:36.689516"
}