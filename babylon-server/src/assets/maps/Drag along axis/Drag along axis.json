{
  "name": "Drag along axis",
  "type": "map",
  "code": "var createScene = function () {\n    // Create basic scene\n    var scene = new BABYLON.Scene(engine);\n    var camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(1, 5, -10), scene);\n    camera.setTarget(BABYLON.Vector3.Zero());\n    var light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), scene);\n    light.intensity = 0.7;\n    var sphere = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, 2, scene);\n    sphere.rotation.x = Math.PI/2\n    sphere.position.y = 1;\n    var ground = BABYLON.Mesh.CreateGround(\"ground1\", 6, 6, 2, scene);\n\n    // Create pointerDragBehavior in the desired mode\n    //var pointerDragBehavior = new BABYLON.PointerDragBehavior({});\n    //var pointerDragBehavior = new BABYLON.PointerDragBehavior({dragPlaneNormal: new BABYLON.Vector3(0,1,0)});\n    var pointerDragBehavior = new BABYLON.PointerDragBehavior({dragAxis: new BABYLON.Vector3(1,0,0)});\n    \n    // Use drag plane in world space\n    pointerDragBehavior.useObjectOrientationForDragging = false;\n\n    // Listen to drag events\n    pointerDragBehavior.onDragStartObservable.add((event)=>{\n        console.log(\"dragStart\");\n        console.log(event);\n    })\n    pointerDragBehavior.onDragObservable.add((event)=>{\n        console.log(\"drag\");\n        console.log(event);\n    })\n    pointerDragBehavior.onDragEndObservable.add((event)=>{\n        console.log(\"dragEnd\");\n        console.log(event);\n    })\n\n    // If handling drag events manually is desired, set move attached to false\n    // pointerDragBehavior.moveAttached = false;\n\n    sphere.addBehavior(pointerDragBehavior);\n\n    return scene;\n\n};",
  "created_at": "2025-08-10T17:04:13.035820",
  "updated_at": "2025-08-10T17:04:13.035842"
}