{
  "name": "walking man",
  "type": "map",
  "code": "var createScene = async function () {\n    var scene = new BABYLON.Scene(engine);\n\n    var camera = new BABYLON.ArcRotateCamera(\"camera\", -Math.PI / 2, Math.PI / 3, 10, BABYLON.Vector3.Zero(), scene);\n    camera.attachControl(canvas, true);\n    camera.setTarget(new BABYLON.Vector3(0, 0.5, 0));\n    camera.wheelPrecision = 10;\n\n    camera.minZ = 0.1;\n    camera.maxZ = 30;\n\n    var light = new BABYLON.DirectionalLight(\"dirLight\", new BABYLON.Vector3(1, -2, 1), scene);\n    light.intensity = 0.4;\n\n    light.shadowMinZ = 0.1;\n    light.shadowMaxZ = 30;\n\n    var light2 = new BABYLON.DirectionalLight(\"dirLight2\", new BABYLON.Vector3(-2, -2, -1), scene);\n    light2.intensity = 0.4;\n\n    light2.shadowMinZ = 0.1;\n    light2.shadowMaxZ = 30;\n\n    // Our built-in 'sphere' shape. Params: name, options, scene\n    var sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", { diameter: 2, segments: 32 }, scene);\n\n    // Move the sphere upward 1/2 its height\n    sphere.position.x = -1;\n    sphere.position.y = 1;\n\n    // Our built-in 'ground' shape. Params: name, options, scene\n    var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", { width: 60, height: 60 }, scene);\n\n    const groundMat = new BABYLON.StandardMaterial(\"mat\", scene);\n    ground.material = groundMat;\n\n    await BABYLON.AppendSceneAsync(\"scenes/Dude/dude.babylon\", scene);\n    scene.lights[2].dispose();\n\n    const hero = scene.getMeshByName(\"him\");\n    hero.scaling.scaleInPlace(0.03);\n    scene.beginAnimation(scene.skeletons[0], 0, 100, true, 1.0);\n    hero.position.x = 1;\n\n    scene.meshes.forEach((m) => m.receiveShadows = true);\n\n    scene.cameraToUseForPointers = camera;\n\n    const nrg = await BABYLON.NodeRenderGraph.ParseFromSnippetAsync(\"PSA9PS#161\", scene, {\n        autoFillExternalInputs: false,\n        debugTextures: true,\n    });\n\n    // Sets values to block inputs / configure blocks\n    const cameraBlock = nrg.getBlockByName(\"Camera\");\n    cameraBlock.value = camera;\n\n    const lightBlock = nrg.getBlockByName(\"ShadowLight\");\n    lightBlock.value = light;\n\n    const light2Block = nrg.getBlockByName(\"ShadowLight2\");\n    light2Block.value = light2;\n\n    const objectListBlock = nrg.getBlockByName(\"ObjectList\");\n    objectListBlock.value = { meshes: scene.meshes, particleSystems: [] };\n\n    const objectListShadowBlock = nrg.getBlockByName(\"ObjectListShadow\");\n    objectListShadowBlock.value = { meshes: scene.meshes.slice(), particleSystems: [] };\n    objectListShadowBlock.value.meshes.splice(objectListShadowBlock.value.meshes.indexOf(ground), 1);\n\n    const guiBlock = nrg.getBlockByName(\"GUI\");\n    const gui = guiBlock.gui;\n\n    const button = BABYLON.GUI.Button.CreateSimpleButton(\"button\", \"Edit Frame Graph\");\n\n    button.width = \"200px\";\n    button.height = \"60px\";\n    button.color = \"white\";\n    button.fontSize = 20;\n    button.background = \"green\";\n    button.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\n    button.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP;\n\n    button.onPointerClickObservable.add(() => {\n        nrg.edit({\n            nodeRenderGraphEditorConfig: {\n                hostScene: scene,\n            }\n        });\n    });\n\n    gui.addControl(button);\n\n    nrg.build();\n\n    await nrg.whenReadyAsync();\n\n    scene.frameGraph = nrg.frameGraph;\n\n    return scene;\n};",
  "created_at": "2025-07-29T13:46:48.061612",
  "updated_at": "2025-07-29T13:46:48.061622"
}