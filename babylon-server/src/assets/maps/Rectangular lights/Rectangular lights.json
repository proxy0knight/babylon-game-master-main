{
  "name": "Rectangular lights",
  "type": "map",
  "code": "function createLight(position, rotation, color, name, scene){\n    const localAxes = new BABYLON.AxesViewer(scene, 1);\n    const box = BABYLON.MeshBuilder.CreateBox(\"box\" + name, {width: 6, height: 6, depth: 0.01});\n    const lightMaterial = new BABYLON.StandardMaterial();\n    lightMaterial.disableLighting = true;\n    lightMaterial.emissiveColor = color;\n    box.material =  lightMaterial;\n\n    localAxes.xAxis.parent = box;\n    localAxes.yAxis.parent = box;\n    localAxes.zAxis.parent = box;\t\n\t\n    box.position = position\n    box.rotation = rotation;\n\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n    var light = new BABYLON.RectAreaLight(\"light\" + name, new BABYLON.Vector3(0, 0, 0), 6, 6, scene);\n    light.parent = box;\n    light.specular = color;\n    light.diffuse = color;\n\n    // Default intensity is 1. Let's dim the light a small amount\n    light.intensity = 0.7;\n}\n\nvar createScene = async function () {\n    // This creates a basic Babylon Scene object (non-mesh)\n    var scene = new BABYLON.Scene(engine);\n    scene.clearColor = BABYLON.Color3.Black();\n\n    // This creates and positions a free camera (non-mesh)\n    var camera = new BABYLON.ArcRotateCamera(\"camera\", 4.1398, 0.9330, 27, new BABYLON.Vector3(-3, 1, 0), scene);\n\n    // This attaches the camera to the canvas\n    camera.attachControl(canvas, true);\n\n    createLight(new BABYLON.Vector3(2, 3, -1), new BABYLON.Vector3(5.976007358828584, 1.5969762655748114), BABYLON.Color3.White(), \"light1\" ,scene);\n    createLight(new BABYLON.Vector3(-3, 3, 10), new BABYLON.Vector3(5.681046715241543, 0, 0), BABYLON.Color3.Red(), \"light2\",scene);\n    createLight(new BABYLON.Vector3(-10, 3, -1), new BABYLON.Vector3(5.681046715241543, -1.5969762655748114, 0), BABYLON.Color3.Green(), \"light3\",scene);\n\n    // Our built-in 'sphere' shape.\n    var sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter: 2, segments: 32}, scene);\n    const standardMaterial = new BABYLON.StandardMaterial(\"StandardMaterial\", scene);\n    standardMaterial.roughness = 0.1;\n    standardMaterial.metallic = 0.1;\n    standardMaterial.albedoColor = BABYLON.Color3.White();\n    sphere.material = standardMaterial;\n\n    // Move the sphere upward 1/2 its height\n    sphere.position.y = 1;\n\n    // Our built-in 'ground' shape.\n    var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", {width: 120, height: 120}, scene);\n    ground.material = standardMaterial;\n\n    var sphere2 = BABYLON.MeshBuilder.CreateSphere(\"sphere2\", {diameter: 3, segments: 32}, scene);\n    const standardMaterial2 = new BABYLON.StandardMaterial(\"StandardMaterial2\", scene);\n    standardMaterial2.roughness = 0.9;\n    standardMaterial2.metallic = 0.9;\n    standardMaterial2.albedoColor = BABYLON.Color3.Red();\n    sphere2.position.y = 3;\n    sphere2.position.x = -3;\n    sphere2.material = standardMaterial2;\n\n    await scene.whenReadyAsync();\n\n    return scene;\n};",
  "created_at": "2025-07-29T15:56:15.884104",
  "updated_at": "2025-07-29T15:56:15.884117"
}