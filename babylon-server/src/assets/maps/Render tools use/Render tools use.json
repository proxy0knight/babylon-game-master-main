{
  "name": "Render tools use",
  "type": "map",
  "code": "var createScene = async function () {\n    // This creates a basic Babylon Scene object (non-mesh)\n    var scene = new BABYLON.Scene(engine);\n\n    // This creates and positions a free camera (non-mesh)\n    var camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 5, -8), scene);\n\n    // This targets the camera to scene origin\n    camera.setTarget(BABYLON.Vector3.Zero());\n\n    // This attaches the camera to the canvas\n    camera.attachControl(canvas, true);\n\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n    var light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\n\n    // Default intensity is 1. Let's dim the light a small amount\n    light.intensity = 0.7;\n\n    // Our built-in 'sphere' shape.\n    var sphere = BABYLON.MeshBuilder.CreateSphere(\"sphere\", {diameter: 2, segments: 32}, scene);\n\n    // Move the sphere upward 1/2 its height\n    sphere.position.y = 1;\n\n    // Our built-in 'ground' shape.\n    var ground = BABYLON.MeshBuilder.CreateGround(\"ground\", {width: 6, height: 6}, scene);\n\n    const nrg = await BABYLON.NodeRenderGraph.ParseFromSnippetAsync(\"#7RTSEF\", scene);\n\n    const utilLayerBlock = nrg.getBlockByName(\"Utility Layer\");\n\n    const gizmo = new BABYLON.PositionGizmo(utilLayerBlock.task.utilityLayerRenderer);\n    gizmo.attachedMesh = sphere;\n\n    // Keep the gizmo fixed to world rotation\n    gizmo.updateGizmoRotationToMatchAttachedMesh = false;\n    gizmo.updateGizmoPositionToMatchAttachedMesh = true;\n\n    return scene;\n};",
  "created_at": "2025-07-29T13:23:26.625375",
  "updated_at": "2025-07-29T13:23:26.625388"
}