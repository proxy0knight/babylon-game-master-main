{
  "name": "cube motion",
  "type": "map",
  "code": "const createScene = () => {\n    const scene = new BABYLON.Scene(engine);\n\n    const camera = new BABYLON.ArcRotateCamera(\"Camera\", - Math.PI / 2, Math.PI / 4, 10, BABYLON.Vector3.Zero());\n    camera.attachControl(canvas, true);\n\t\n\tconst light1 = new BABYLON.DirectionalLight(\"DirectionalLight\", new BABYLON.Vector3(0, -1, 1));\n    const light2 = new BABYLON.HemisphericLight(\"HemiLight\", new BABYLON.Vector3(0, 1, 0));   \n    light1.intensity =0.75;\n    light2.intensity =0.5;\n\n    const box = BABYLON.MeshBuilder.CreateBox(\"box\", {});\n    box.position.x = 2;\n\n    const frameRate = 10;\n\n    const xSlide = new BABYLON.Animation(\"xSlide\", \"position.x\", frameRate, BABYLON.Animation.ANIMATIONTYPE_FLOAT, BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);\n\n    const keyFrames = []; \n\n    keyFrames.push({\n        frame: 0,\n        value: 2\n    });\n\n    keyFrames.push({\n        frame: frameRate,\n        value: -2\n    });\n\n    keyFrames.push({\n        frame: 2 * frameRate,\n        value: 2\n    });\n\n    xSlide.setKeys(keyFrames);\n\n    box.animations.push(xSlide);\n\n    const myAnim = scene.beginAnimation(box, 0, 2 * frameRate, true);\n\n    setTimeout(() => {myAnim.stop()}, 5000);\n\n\treturn scene;\n};",
  "created_at": "2025-07-29T05:42:28.161868",
  "updated_at": "2025-07-29T05:42:28.161876"
}