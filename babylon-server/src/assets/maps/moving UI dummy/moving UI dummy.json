{
  "name": "moving UI dummy",
  "type": "map",
  "code": "var delayCreateScene = function () {\n\n    // Model by Mixamo\n\n    engine.enableOfflineSupport = false;\n    \n    // This is really important to tell Babylon.js to use decomposeLerp and matrix interpolation\n    BABYLON.Animation.AllowMatricesInterpolation = true;\n\n    var scene = new BABYLON.Scene(engine);\n\n    var camera = new BABYLON.ArcRotateCamera(\"camera1\", Math.PI / 2, Math.PI / 4, 3, new BABYLON.Vector3(0, 1, 0), scene);\n    camera.attachControl(canvas, true);\n\n    camera.lowerRadiusLimit = 2;\n    camera.upperRadiusLimit = 10;\n    camera.wheelDeltaPercentage = 0.01;\n\n\tvar light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), scene);\n\tlight.intensity = 0.6;\n\tlight.specular = BABYLON.Color3.Black();\n\n    var light2 = new BABYLON.DirectionalLight(\"dir01\", new BABYLON.Vector3(0, -0.5, -1.0), scene);\n    light2.position = new BABYLON.Vector3(0, 5, 5);\n\n    // Shadows\n    var shadowGenerator = new BABYLON.ShadowGenerator(1024, light2);\n    shadowGenerator.useBlurExponentialShadowMap = true;\n    shadowGenerator.blurKernel = 32;\n\t\n    engine.displayLoadingUI();\n\n\tBABYLON.SceneLoader.ImportMesh(\"\", \"./scenes/\", \"dummy3.babylon\", scene, function (newMeshes, particleSystems, skeletons) {\n        var skeleton = skeletons[0];\n\n        shadowGenerator.addShadowCaster(scene.meshes[0], true);\n        for (var index = 0; index < newMeshes.length; index++) {\n            newMeshes[index].receiveShadows = false;;\n        }\n\n        var helper = scene.createDefaultEnvironment({\n            enableGroundShadow: true\n        });\n        helper.setMainColor(BABYLON.Color3.Gray());\n        helper.ground.position.y += 0.01;\n\n        // ROBOT\n        skeleton.animationPropertiesOverride = new BABYLON.AnimationPropertiesOverride();\n        skeleton.animationPropertiesOverride.enableBlending = true;\n        skeleton.animationPropertiesOverride.blendingSpeed = 0.05;\n        skeleton.animationPropertiesOverride.loopMode = 1;\n    \n        var idleRange = skeleton.getAnimationRange(\"YBot_Idle\");\n        var walkRange = skeleton.getAnimationRange(\"YBot_Walk\");\n        var runRange = skeleton.getAnimationRange(\"YBot_Run\");\n        var leftRange = skeleton.getAnimationRange(\"YBot_LeftStrafeWalk\");\n        var rightRange = skeleton.getAnimationRange(\"YBot_RightStrafeWalk\");\n        \n        // IDLE\n        if (idleRange) scene.beginAnimation(skeleton, idleRange.from, idleRange.to, true);\n\t\t       \n        // UI\n        var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n        var UiPanel = new BABYLON.GUI.StackPanel();\n        UiPanel.width = \"220px\";\n        UiPanel.fontSize = \"14px\";\n        UiPanel.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\n        UiPanel.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER;\n        advancedTexture.addControl(UiPanel);\n        // ..\n        var button = BABYLON.GUI.Button.CreateSimpleButton(\"but1\", \"Play Idle\");\n        button.paddingTop = \"10px\";\n        button.width = \"100px\";\n        button.height = \"50px\";\n        button.color = \"white\";\n        button.background = \"green\";\n        button.onPointerDownObservable.add(()=> {\n            if (idleRange) scene.beginAnimation(skeleton, idleRange.from, idleRange.to, true);\n        });\n        UiPanel.addControl(button);\n        // ..\n        var button1 = BABYLON.GUI.Button.CreateSimpleButton(\"but2\", \"Play Walk\");\n        button1.paddingTop = \"10px\";\n        button1.width = \"100px\";\n        button1.height = \"50px\";\n        button1.color = \"white\";\n        button1.background = \"green\";\n        button1.onPointerDownObservable.add(()=> {\n            if (walkRange) scene.beginAnimation(skeleton, walkRange.from, walkRange.to, true);\n        });\n        UiPanel.addControl(button1);\n        // ..\n        var button1 = BABYLON.GUI.Button.CreateSimpleButton(\"but3\", \"Play Run\");\n        button1.paddingTop = \"10px\";\n        button1.width = \"100px\";\n        button1.height = \"50px\";\n        button1.color = \"white\";\n        button1.background = \"green\";\n        button1.onPointerDownObservable.add(()=> {\n            if (runRange) scene.beginAnimation(skeleton, runRange.from, runRange.to, true);\n        });\n        UiPanel.addControl(button1);\n        // ..\n        var button1 = BABYLON.GUI.Button.CreateSimpleButton(\"but4\", \"Play Left\");\n        button1.paddingTop = \"10px\";\n        button1.width = \"100px\";\n        button1.height = \"50px\";\n        button1.color = \"white\";\n        button1.background = \"green\";\n        button1.onPointerDownObservable.add(()=> {\n            if (leftRange) scene.beginAnimation(skeleton, leftRange.from, leftRange.to, true);\n        });\n        UiPanel.addControl(button1);\n        // ..\n        var button1 = BABYLON.GUI.Button.CreateSimpleButton(\"but5\", \"Play Right\");\n        button1.paddingTop = \"10px\";\n        button1.width = \"100px\";\n        button1.height = \"50px\";\n        button1.color = \"white\";\n        button1.background = \"green\";\n        button1.onPointerDownObservable.add(()=> {\n            if (rightRange) scene.beginAnimation(skeleton, rightRange.from, rightRange.to, true);\n        });\n        UiPanel.addControl(button1);\n        // ..\n        var button1 = BABYLON.GUI.Button.CreateSimpleButton(\"but6\", \"Play Blend\");\n        button1.paddingTop = \"10px\";\n        button1.width = \"100px\";\n        button1.height = \"50px\";\n        button1.color = \"white\";\n        button1.background = \"green\";\n        button1.onPointerDownObservable.add(()=> {\n            if (walkRange && leftRange) {\n                scene.stopAnimation(skeleton);\n                var walkAnim = scene.beginWeightedAnimation(skeleton, walkRange.from, walkRange.to, 0.5, true);\n                var leftAnim = scene.beginWeightedAnimation(skeleton, leftRange.from, leftRange.to, 0.5, true);\n\n                // Note: Sync Speed Ratio With Master Walk Animation\n                walkAnim.syncWith(null);\n                leftAnim.syncWith(walkAnim);\n            }\n        });\n        UiPanel.addControl(button1);\n\n        engine.hideLoadingUI();\n    });\t\n\n    return scene;\n};\n",
  "created_at": "2025-07-29T13:40:27.233156",
  "updated_at": "2025-07-29T13:40:27.233175"
}