{
  "name": "test",
  "type": "scene",
  "code": "var createScene = function () {\n    var scene = new BABYLON.Scene(engine);\n\n    var light = new BABYLON.PointLight(\"Omni\", new BABYLON.Vector3(0, 100, 100), scene);\n    var camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0.8, 100, BABYLON.Vector3.Zero(), scene);\n    camera.attachControl(canvas, true);\n\n    //Boxes\n    var box1 = BABYLON.Mesh.CreateBox(\"Box1\", 10.0, scene);\n    box1.position.x = -20;\n    var box2 = BABYLON.Mesh.CreateBox(\"Box2\", 10.0, scene);\n\n    var materialBox = new BABYLON.StandardMaterial(\"texture1\", scene);\n    materialBox.diffuseColor = new BABYLON.Color3(0, 1, 0);//Green\n    var materialBox2 = new BABYLON.StandardMaterial(\"texture2\", scene);\n\n    //Applying materials\n    box1.material = materialBox;\n    box2.material = materialBox2;\n\n    //Positioning box\n    box2.position.x = 20;\n\n\n    //Create a scaling animation\n    var animation1 = new BABYLON.Animation(\"tutoAnimation\", \"scaling.z\", 30, BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n        BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);\n\n    // Animation keys\n    var keys = [];\n    //At the animation key 0, the value of scaling is \"1\"\n    keys.push({\n        frame: 0,\n        value: 1\n    });\n\n    //At the animation key 20, the value of scaling is \"0.2\"\n    keys.push({\n        frame: 20,\n        value: 0.2\n    });\n\n    //At the animation key 100, the value of scaling is \"1\"\n    keys.push({\n        frame: 100,\n        value: 1\n    });\n\n    //Adding keys to the animation object\n    animation1.setKeys(keys);\n\n    //Create a second rotation animation with different timeline\n    var animation2 = new BABYLON.Animation(\"tutoAnimation\", \"rotation.y\", 30, BABYLON.Animation.ANIMATIONTYPE_FLOAT,\n        BABYLON.Animation.ANIMATIONLOOPMODE_CYCLE);\n\n    // Animation keys\n    keys = [];\n    keys.push({\n        frame: 0,\n        value: 0\n    });\n\n    keys.push({\n        frame: 40,\n        value: Math.PI\n    });\n\n    keys.push({\n        frame: 80,\n        value: 0\n    });\n\n    //Adding keys to the animation object\n    animation2.setKeys(keys);\n\n    // Create the animation group\n    var animationGroup = new BABYLON.AnimationGroup(\"my group\");\n    animationGroup.addTargetedAnimation(animation1, box1);\n    animationGroup.addTargetedAnimation(animation2, box2);\n\n    // Make sure to normalize animations to the same timeline\n    animationGroup.normalize(0, 100);\n\n    // UI\n    var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n    var panel = new BABYLON.GUI.StackPanel();\n    panel.isVertical = false;\n    panel.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;\n    advancedTexture.addControl(panel);\n\n    var addButton = function (text, callback) {\n        var button = BABYLON.GUI.Button.CreateSimpleButton(\"button\", text);\n        button.width = \"140px\";\n        button.height = \"40px\";\n        button.color = \"white\";\n        button.background = \"green\";\n        button.paddingLeft = \"10px\";\n        button.paddingRight = \"10px\";\n        button.onPointerUpObservable.add(function () {\n            callback();\n        });\n        panel.addControl(button);\n    }\n\n    addButton(\"Play\", function () {\n        animationGroup.play(true);\n    });\n\n    addButton(\"Pause\", function () {\n        animationGroup.pause();\n    });\n// Flow trigger block\n// FLOW_TRIGGER: id=myTrigger1\n// When the runtime sees this block executed (e.g., via a button click),\n// it will trigger the outgoing link defined in the flow graph for 'myTrigger1'.\n// Example: attach to a mesh action or GUI button:\nif (typeof BABYLON !== 'undefined' && scene) {\n  const flowTrigger = (id) => {\n    if (window && window.__triggerFlowNode) {\n      window.__triggerFlowNode(id);\n    }\n  };\n   addButton(\"Stop\", function () {\n        animationGroup.reset();\n        animationGroup.stop();\n    });\n  // Example (hook to button):\n  // myButton.onPointerUpObservable.add(() => flowTrigger('myTrigger1'));\n}\n   \n\n    return scene;\n}",
  "created_at": "2025-08-09T17:21:18.434252",
  "updated_at": "2025-08-09T17:21:18.434261"
}